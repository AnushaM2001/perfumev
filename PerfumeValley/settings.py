"""
Django settings for PerfumeValley project.

Generated by 'django-admin startproject' using Django 5.0.2.

For more information on this file, see
https://docs.djangoproject.com/en/5.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.0/ref/settings/
"""
import os
from pathlib import Path
from decouple import config

SHIPROCKET_EMAIL = config("SHIPROCKET_EMAIL")
SHIPROCKET_PASSWORD = config("SHIPROCKET_PASSWORD")
# Celery Settings
CELERY_BROKER_URL = 'redis://localhost:6379/0'
CELERY_ACCEPT_CONTENT = ['json']
CELERY_TASK_SERIALIZER = 'json'
CELERY_IMPORTS = ('admin_panel.tasks', 'user_panel.tasks')

VAPID_PUBLIC_KEY = "BOq9RSStBKaio0QslQFxOpu3IYUrIiypkGLTOIIWw4-pAiE-BQfLreFmd2EmkBdvAnDrKP8LYSHhJVP7n83MLmo"
VAPID_PRIVATE_KEY = "sw-kz4Rgf5IcgrM76a9ZWstlBZz74xYT9u-S8ARTFgM"
VAPID_ADMIN_EMAIL = "mailto:admin@example.com"


# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.0/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-a9qr^u367(eb+12ux$#5s5_zoo9#2ed1u7ovde$($nn(bgfodd'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True
# settings.py


ALLOWED_HOSTS = ['*']

X_FRAME_OPTIONS = 'ALLOWALL'

# Application definition

INSTALLED_APPS = [
    'daphne',
    'channels',
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'django.contrib.humanize',
    "admin_panel",
    "user_panel",
    "django_celery_beat",
    'crispy_forms',
    'crispy_bootstrap5',
    'storages',
]

CRISPY_ALLOWED_TEMPLATE_PACKS = "bootstrap5"
CRISPY_TEMPLATE_PACK = "bootstrap5"

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'user_panel.middleware.BlockedUserMiddleware',  
]

ROOT_URLCONF = 'PerfumeValley.urls'
import os

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR, 'templates')],  # Global Templates Folder
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'user_panel.context_processors.category_subcategory_navbar', #add this line
                'user_panel.context_processors.festival_offer_context',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
                'admin_panel.context_processors.admin_context',  # ← Add this line

            ],
        },
    },
]


WSGI_APPLICATION = 'PerfumeValley.wsgi.application'
ASGI_APPLICATION = 'PerfumeValley.asgi.application'

CHANNEL_LAYERS = {
    "default": {
        "BACKEND": "channels_redis.core.RedisChannelLayer",
        "CONFIG": {
            "hosts": [("127.0.0.1", 6379)],  # Redis server address
        },
    },
}

# Database
# https://docs.djangoproject.com/en/5.0/ref/settings/#databases

# DATABASES = {
#     'default': {
#         'ENGINE': 'django.db.backends.sqlite3',
#         'NAME': BASE_DIR / 'db.sqlite3',
#     }
# }
DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.mysql',  # Use PostgreSQL backend
        'NAME': 'perfumevalley',  # Replace with your database name
        'USER':'admin',  # Replace with your database user
        'PASSWORD': 'PerfumeValley123',  # Replace with your database password
        'HOST': 'database-1.cbgkeq6km8n5.eu-north-1.rds.amazonaws.com',  # Set to 'localhost' or the IP address of your PostgreSQL server
        'PORT': '3306',  # Default PostgreSQL port
        'OPTIONS': {
          'init_command': "SET sql_mode='STRICT_TRANS_TABLES,NO_ENGINE_SUBSTITUTION'",
        }
    }
}


# Password validation
# https://docs.djangoproject.com/en/5.0/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]
FILE_UPLOAD_MAX_MEMORY_SIZE = 10485760

# Internationalization
# https://docs.djangoproject.com/en/5.0/topics/i18n/

LANGUAGE_CODE = 'en-us'
TIME_ZONE = 'Asia/Kolkata'
USE_I18N = True
USE_TZ = True

import os
# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.0/howto/static-files/

BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))

# URL to access static files
STATIC_URL = '/static/'

# During development, where Django looks for static files
STATICFILES_DIRS = [
    os.path.join(BASE_DIR, 'static'),
]

# Where collectstatic gathers all static files for production
STATIC_ROOT = os.path.join(BASE_DIR, 'staticfiles')


# MEDIA_URL = '/media/'
# MEDIA_ROOT = os.path.join(BASE_DIR, 'media/')



AWS_ACCESS_KEY_ID = 'AKIAYVM35QIYGSAYE6GU'
AWS_SECRET_ACCESS_KEY = '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'
AWS_STORAGE_BUCKET_NAME = 'perfumevalleybucket'
AWS_S3_SIGNATURE_NAME = 's3v4',
AWS_S3_REGION_NAME = 'eu-north-1'
AWS_S3_FILE_OVERWRITE = False
AWS_DEFAULT_ACL =  None
AWS_S3_VERIFY = True
AWS_S3_CUSTOM_DOMAIN = f"{AWS_STORAGE_BUCKET_NAME}.s3.{AWS_S3_REGION_NAME}.amazonaws.com"

# Static & Media
MEDIA_URL = f"https://{AWS_S3_CUSTOM_DOMAIN}/"
DEFAULT_FILE_STORAGE = "storages.backends.s3boto3.S3Boto3Storage"

# Ensure you have 'django.contrib.staticfiles' in INSTALLED_APPS

# Default primary key field type
# https://docs.djangoproject.com/en/5.0/ref/settings/#default-auto-field

LOGIN_URL = '/login/'


DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

RAZORPAY_KEY_ID='rzp_test_4n1nOY0K5q7P3g'
RAZORPAY_SECRET='aA5yciXqziLqd5OdPd0MyOHZ'

# settings.py
APPEND_SLASH = False

# EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'
# EMAIL_HOST = 'mail.dreamdevtechs.com'  
# EMAIL_PORT = 465  
# EMAIL_USE_TLS = False  
# EMAIL_USE_SSL = True  
# EMAIL_HOST_USER = 'tripvthme@dreamdevtechs.com' 
# EMAIL_HOST_PASSWORD = 'hhyo kfth syst muyn' 
# DEFAULT_FROM_EMAIL = 'tripvthme@dreamdevtechs.com'  

EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'
EMAIL_HOST = 'smtp.gmail.com'
EMAIL_PORT = 587
EMAIL_USE_TLS = True
EMAIL_HOST_USER = 'MAADAVASANTHA@gmail.com'
EMAIL_HOST_PASSWORD = 'hhyo kfth syst muyn'



# Redis Settings
REDIS_HOST = '127.0.0.1'
REDIS_PORT = 6379
REDIS_DB = 0
